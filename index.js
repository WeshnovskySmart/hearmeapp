// –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –±—ñ–±–ª—ñ–æ—Ç–µ–∫–∏
const express = require("express");
const http = require("http");
const WebSocket = require("ws");
const { v4: uuidv4 } = require("uuid"); // –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö ID

// –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ —Å–µ—Ä–≤–µ—Ä
const port = process.env.PORT || 3000;
const app = express();
const server = http.createServer(app);
const wss = new WebSocket.Server({ server });

// –°—Ç–≤–æ—Ä—é—î–º–æ "–∫—ñ–º–Ω–∞—Ç–∏ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è"
// –¶–µ –æ–±'—î–∫—Ç–∏, –¥–µ –º–∏ –±—É–¥–µ–º–æ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤, —è–∫—ñ —á–µ–∫–∞—é—Ç—å –Ω–∞ —Å–ø—ñ–≤—Ä–æ–∑–º–æ–≤–Ω–∏–∫–∞
const waitingUsers = {
    voice: [],
    text: [],
};

// –°—Ç–≤–æ—Ä—é—î–º–æ –æ–±'—î–∫—Ç –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω–∏—Ö —á–∞—Ç—ñ–≤
const activeChats = {};

// –ë–∞–∑–æ–≤–∏–π –º–∞—Ä—à—Ä—É—Ç, —â–æ–± –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏, —á–∏ –ø—Ä–∞—Ü—é—î —Å–µ—Ä–≤–µ—Ä
app.get("/", (req, res) => {
    res.send("–°–µ—Ä–≤–µ—Ä HearMe –ø—Ä–∞—Ü—é—î!");
});

// –ì–æ–ª–æ–≤–Ω–∞ –ª–æ–≥—ñ–∫–∞, —è–∫–∞ —Å–ø—Ä–∞—Ü—å–æ–≤—É—î –ø—Ä–∏ –Ω–æ–≤–æ–º—É –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—ñ
wss.on("connection", (ws) => {
    // –ü—Ä–∏—Å–≤–æ—é—î–º–æ –∫–æ–∂–Ω–æ–º—É –Ω–æ–≤–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π ID
    ws.id = uuidv4();
    console.log(`‚úÖ –ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è: ${ws.id}`);

    // –í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø—Ä–∏–≤—ñ—Ç–∞–ª—å–Ω–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–æ–≤–æ–º—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–≤—ñ
    ws.send(
        JSON.stringify({
            type: "welcome_message",
            content: "–í—ñ—Ç–∞—î–º–æ —É HearMe! –í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–∏–ª–∏—Å—å –¥–æ —Å–µ—Ä–≤–µ—Ä–∞.",
        }),
    );

    // –û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    ws.on("message", (message) => {
        try {
            const data = JSON.parse(message);
            console.log(`üì• –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ ${ws.id}:`, data);

            // –û–±—Ä–æ–±–ª—è—î–º–æ —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
            switch (data.type) {
                // –ö–æ–ª–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ—á–∏–Ω–∞—î –ø–æ—à—É–∫
                case "start_search":
                    handleStartSearch(ws, data.mode);
                    break;
                // –î–æ–¥–∞–º–æ —ñ–Ω—à—ñ –æ–±—Ä–æ–±–Ω–∏–∫–∏ (–≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —á–∞—Ç—É) –ø—ñ–∑–Ω—ñ—à–µ
            }
        } catch (error) {
            console.error("–ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:", error);
        }
    });

    // –û–±—Ä–æ–±–ª—è—î–º–æ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    ws.on("close", () => {
        console.log(`üîå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${ws.id} –≤—ñ–¥–∫–ª—é—á–∏–≤—Å—è.`);
        // –ü–æ—Ç—Ä—ñ–±–Ω–æ –±—É–¥–µ –¥–æ–¥–∞—Ç–∏ –ª–æ–≥—ñ–∫—É –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —á–∞—Ç—É, —è–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –±—É–≤ —É –Ω—å–æ–º—É
    });
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ–±—Ä–æ–±–∫–∏ –ø–æ—á–∞—Ç–∫—É –ø–æ—à—É–∫—É
function handleStartSearch(user, mode) {
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î —Ç–∞–∫–∞ "–∫—ñ–º–Ω–∞—Ç–∞ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è" (voice –∞–±–æ text)
    if (!waitingUsers[mode]) {
        console.error(`–ù–µ–≤—ñ—Ä–Ω–∏–π —Ä–µ–∂–∏–º –ø–æ—à—É–∫—É: ${mode}`);
        return;
    }

    // –®—É–∫–∞—î–º–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ —É —Å–ø–∏—Å–∫—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
    const waitingPartner = waitingUsers[mode].find((p) => p.id !== user.id);

    if (waitingPartner) {
        // –Ø–∫—â–æ –ø–∞—Ä—Ç–Ω–µ—Ä –∑–Ω–∞–π–¥–µ–Ω–∏–π!
        console.log(
            `üéâ –ó–Ω–∞–π–¥–µ–Ω–æ –ø–∞—Ä—É! ${user.id} —Ç–∞ ${waitingPartner.id} —É —Ä–µ–∂–∏–º—ñ "${mode}"`,
        );

        // –í–∏–¥–∞–ª—è—î–º–æ –ø–∞—Ä—Ç–Ω–µ—Ä–∞ –∑—ñ —Å–ø–∏—Å–∫—É –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
        waitingUsers[mode] = waitingUsers[mode].filter(
            (p) => p.id !== waitingPartner.id,
        );

        // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–ª—è –Ω–∏—Ö —á–∞—Ç
        const chatId = uuidv4();
        activeChats[chatId] = [user, waitingPartner];
        user.chatId = chatId;
        waitingPartner.chatId = chatId;

        // –ü–æ–≤—ñ–¥–æ–º–ª—è—î–º–æ –æ–±–æ—Ö, —â–æ –ø–∞—Ä–∞ –∑–Ω–∞–π–¥–µ–Ω–∞
        user.send(JSON.stringify({ type: "partner_found" }));
        waitingPartner.send(JSON.stringify({ type: "partner_found" }));
    } else {
        // –Ø–∫—â–æ –Ω—ñ–∫–æ–≥–æ –Ω–µ–º–∞—î, –¥–æ–¥–∞—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —É —Å–ø–∏—Å–æ–∫ –æ—á—ñ–∫—É–≤–∞–Ω–Ω—è
        console.log(`‚è≥ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á ${user.id} –¥–æ–¥–∞–Ω–∏–π —É —á–µ—Ä–≥—É "${mode}"`);
        // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—å, —â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤ —ñ–Ω—à–∏—Ö —á–µ—Ä–≥–∞—Ö
        Object.keys(waitingUsers).forEach((key) => {
            waitingUsers[key] = waitingUsers[key].filter(
                (u) => u.id !== user.id,
            );
        });
        waitingUsers[mode].push(user);
    }
}

// –ó–∞–ø—É—Å–∫–∞—î–º–æ —Å–µ—Ä–≤–µ—Ä
server.listen(port, () => {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—ñ ${port}`);
});
