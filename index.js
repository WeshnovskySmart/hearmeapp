// –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –±—ñ–±–ª—ñ–æ—Ç–µ–∫
const express = require("express");
const http = require("http");
const WebSocket = require("ws");

// –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–∞
// Railway/Replit –Ω–∞–¥–∞–¥—É—Ç—å –ø–æ—Ä—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —á–µ—Ä–µ–∑ process.env.PORT
const PORT = process.env.PORT || 3000;
const app = express();
const server = http.createServer(app);
const wss = new WebSocket.Server({ server });

// –¶—è —Ñ—É–Ω–∫—Ü—ñ—è —Å–ø—Ä–∞—Ü—å–æ–≤—É—î, –∫–æ–ª–∏ —Ö—Ç–æ—Å—å –ø—ñ–¥–∫–ª—é—á–∞—î—Ç—å—Å—è
wss.on("connection", (ws) => {
    console.log("üîó –ù–æ–≤–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø—ñ–¥–∫–ª—é—á–∏–≤—Å—è!");

    // –û–±—Ä–æ–±–∫–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    ws.on("message", (message) => {
        console.log(`üì• –û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${message}`);
        ws.send(`–°–µ—Ä–≤–µ—Ä –æ—Ç—Ä–∏–º–∞–≤ –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: ${message}`);
    });

    // –û–±—Ä–æ–±–∫–∞ –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è
    ws.on("close", () => {
        console.log("üëã –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤—ñ–¥–∫–ª—é—á–∏–≤—Å—è.");
    });

    ws.send("–í—ñ—Ç–∞—î–º–æ —É HearMe! –í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–∫–ª—é—á–∏–ª–∏—Å—å –¥–æ —Å–µ—Ä–≤–µ—Ä–∞.");
});

// –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Ä–æ–±–æ—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ —á–µ—Ä–µ–∑ –±—Ä–∞—É–∑–µ—Ä
app.get("/", (req, res) => {
    res.send("<h1>–°–µ—Ä–≤–µ—Ä HearMe –ø—Ä–∞—Ü—é—î!</h1>");
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
server.listen(PORT, () => {
    console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ –ø–æ—Ä—Ç—ñ ${PORT}`);
});
